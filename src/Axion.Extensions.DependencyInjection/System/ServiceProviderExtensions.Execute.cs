// Copyright (c) Michael Aksionkin. All rights reserved.
// Licensed under the MIT License.
// <auto-generated />

#nullable enable

using System.Threading.Tasks;

namespace System;

partial class ServiceProviderExtensions
{
    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, TResult>(this IServiceProvider serviceProvider, Func<T1, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, TResult>(this IServiceProvider serviceProvider, Func<T1, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1>(this IServiceProvider serviceProvider, Func<T1, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1>(this IServiceProvider serviceProvider, Action<T1> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2>(this IServiceProvider serviceProvider, Func<T1, T2, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2>(this IServiceProvider serviceProvider, Action<T1, T2> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3>(this IServiceProvider serviceProvider, Func<T1, T2, T3, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3>(this IServiceProvider serviceProvider, Action<T1, T2, T3> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, T6, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, T6, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5, T6>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5, T6>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5, T6> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, T6, T7, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5, T6, T7>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5, T6, T7>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5, T6, T7> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5, T6, T7, T8>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5, T6, T7, T8> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <typeparam name="T15">The type of the fifteenth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <typeparam name="T15">The type of the fifteenth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <typeparam name="T15">The type of the fifteenth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <typeparam name="T15">The type of the fifteenth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <typeparam name="T15">The type of the fifteenth parameter of the function.</typeparam>
    /// <typeparam name="T16">The type of the sixteenth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static TResult Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult> @delegate) =>
        serviceProvider.Execute<TResult>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <typeparam name="T15">The type of the fifteenth parameter of the function.</typeparam>
    /// <typeparam name="T16">The type of the sixteenth parameter of the function.</typeparam>
    /// <typeparam name="TResult">The type of the return value of the method that <paramref name="delegate"/> encapsulates.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task<TResult> ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Task<TResult>> @delegate) =>
        serviceProvider.Execute<Task<TResult>>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <typeparam name="T15">The type of the fifteenth parameter of the function.</typeparam>
    /// <typeparam name="T16">The type of the sixteenth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    /// <returns>A value that returns <paramref name="delegate"/>.</returns>
    public static Task ExecuteAsync<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this IServiceProvider serviceProvider, Func<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Task> @delegate) =>
        serviceProvider.Execute<Task>((Delegate)@delegate);

    /// <summary>
    /// Executes a <paramref name="delegate"/> in context of <see cref="IServiceProvider"/>.
    /// </summary>
    /// <typeparam name="T1">The type of the first parameter of the function.</typeparam>
    /// <typeparam name="T2">The type of the second parameter of the function.</typeparam>
    /// <typeparam name="T3">The type of the third parameter of the function.</typeparam>
    /// <typeparam name="T4">The type of the fourth parameter of the function.</typeparam>
    /// <typeparam name="T5">The type of the fifth parameter of the function.</typeparam>
    /// <typeparam name="T6">The type of the sixth parameter of the function.</typeparam>
    /// <typeparam name="T7">The type of the seventh parameter of the function.</typeparam>
    /// <typeparam name="T8">The type of the eighth parameter of the function.</typeparam>
    /// <typeparam name="T9">The type of the ninth parameter of the function.</typeparam>
    /// <typeparam name="T10">The type of the tenth parameter of the function.</typeparam>
    /// <typeparam name="T11">The type of the eleventh parameter of the function.</typeparam>
    /// <typeparam name="T12">The type of the twelfth parameter of the function.</typeparam>
    /// <typeparam name="T13">The type of the thirteenth parameter of the function.</typeparam>
    /// <typeparam name="T14">The type of the fourteenth parameter of the function.</typeparam>
    /// <typeparam name="T15">The type of the fifteenth parameter of the function.</typeparam>
    /// <typeparam name="T16">The type of the sixteenth parameter of the function.</typeparam>
    /// <param name="serviceProvider">a <see cref="IServiceProvider"/>.</param>
    /// <param name="delegate">A delegate that is executed in context of <paramref name="serviceProvider"/>.</param>
    public static void Execute<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this IServiceProvider serviceProvider, Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> @delegate) =>
        serviceProvider.Execute((Delegate)@delegate);

}